name: Yamdb workflow

on: [push]

jobs:
  tests:
    name: Running tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setting up Python 
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    - name: Installing dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r requirements.txt
    - name: Testing with flake8 and pytest
      run: |
        python -m flake8 
        pytest

  build_and_push_to_docker_hub:
    name: Pushing Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checking out the repo
        uses: actions/checkout@v2

      - name: Setting up Docker Buildx
        uses: docker/setup-buildx-action@v1 

      - name: Logging to Docker 
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pushing to Docker Hub 
        uses: docker/build-push-action@v2 
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/yamdb_final:latest

  deploy:
    name: Deploying on server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo systemctl stop nginx
          sudo docker-compose stop
          sudo docker-compose rm web
          touch .env
          echo DB_ENGINE=${{ secrets.DB_ENGINE }} >> .env
          echo DB_NAME=${{ secrets.DB_NAME }} >> .env
          echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
          echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
          echo DB_HOST=${{ secrets.DB_HOST }} >> .env
          echo DB_PORT=${{ secrets.DB_PORT }} >> .env
          echo DJ_SECRET_KEY=${{ secrets.DJ_SECRET_KEY }} >> .env
          sudo docker-compose up -t --build

  send_message:
    name: Sending message to Telegram
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Sending message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
 